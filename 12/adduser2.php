<?php
ini_set('display_errors','On');
//phpinfo();
//exit;
/**
 * Интернет-программирование. Задача 8.
 * Реализовать скрипт на веб-сервере на PHP или другом языке,
 * сохраняющий в XML-файл заполненную форму задания 7. При
 * отправке формы на сервере создается новый файл с уникальным именем.
 */

// Отправляем браузеру правильную кодировку,
// файл index.php должен быть в кодировке UTF-8 без BOM.
header('Content-Type: text/html; charset=UTF-8');

// В суперглобальном массиве $_SERVER PHP сохраняет некторые заголовки запроса HTTP
// и другие сведения о клиненте и сервере, например метод текущего запроса $_SERVER['REQUEST_METHOD'].
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    // В суперглобальном массиве $_GET PHP хранит все параметры, переданные в текущем запросе через URL.
    if (!empty($_GET['save'])) {
        // Если есть параметр save, то выводим сообщение пользователю.
        print('Спасибо, результаты сохранены.');
    }
    // Включаем содержимое файла form.php.
    include('adduser.php');
}
// Иначе, если запрос был методом POST, т.е. нужно проверить данные и сохранить их в XML-файл.
else {
    // Проверяем ошибки.
    $errors = FALSE;
    if (empty($_POST['login'])) {
        print('Заполните логин.<br/>');
        $errors = TRUE;
    }

    if (empty($_POST['password']) || empty($_POST['password2'])) {
        print('Заполните пароль. <br>');
        $errors = TRUE;
    }

    if ($_POST['password'] != $_POST['password2']) {
        print('Пароли не совпадают. <br>');
        $errors = TRUE;
    }

// *************
// Тут необходимо проверить правильность заполнения всех остальных полей.
// *************

    if ($errors) {
        // При наличии ошибок завершаем работу скрипта.
        exit();
    }
    // Сохранение в XML-документ.
    // Создаем новый XML-документ с корневым тегом document в памяти.
    $xml = new SimpleXMLElement('<document/>');
    // Добавляем элемент fio.
    // В суперглобальном массиве $_POST PHP хранит все параметры, переданные в текущем запросе
    // через urlencoded данные в сущности запроса.
    $child = $xml->AddChild('login', $_POST['login']);
    $child = $xml->AddChild('password', $_POST['password']);
    $child = $xml->AddChild('admin', $_POST['admin']);

    // Аналогично добавляем остальные элементы,
    // аттрибуты добавляем через $element->AddAttribute().

// *************
// Тут необходимо сохранить в XML все данные формы.
// *************

    // Сохраняем XML в строку.
    $s = $xml->AsXML();
    // Имя файла.
    $f = "users/" . uniqid() . '.xml';

// *************
// Тут необходимо обеспечить уникальность имен файлов одним из трех способов:
// 1) вести счетчик последнего имени файла, функции file_get_contents/file_put_contents
// 2) использовать в имени файла текущее время, например time()
// 3) использовать GUID (Google: php guid)
// *************
    // Записываем в файл.
    file_put_contents($f, $s);

    // Делаем перенаправление.
    // Если файл не сохраняется, но ошибок не видно, то можно закомментировать эту строку чтобы увидеть ошибку.
    // Если ошибок при этом не видно, то необходимо настроить параметр display_errors для PHP.
    header('Location:'.$_SERVER['PHP_SELF'].'?save=1');
}